<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lhx.mapper.UserPayMapper">
  <resultMap id="BaseResultMap" type="org.lhx.bean.UserPay">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="order_amount" jdbcType="DOUBLE" property="orderAmount" />
    <result column="payment_method" jdbcType="VARCHAR" property="paymentMethod" />
    <result column="payment_bank" jdbcType="VARCHAR" property="paymentBank" />
    <result column="bank_flow" jdbcType="VARCHAR" property="bankFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, user_id, order_id, payment_time, order_amount, payment_method, payment_bank, 
    bank_flow
  </sql>
  <select id="selectByExample" parameterType="org.lhx.bean.UserPayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mall_user_pay
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_mall_user_pay
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.lhx.bean.UserPayExample">
    delete from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.lhx.bean.UserPay">
    insert into t_mall_user_pay (Id, user_id, order_id, 
      payment_time, order_amount, payment_method, 
      payment_bank, bank_flow)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{orderAmount,jdbcType=DOUBLE}, #{paymentMethod,jdbcType=VARCHAR}, 
      #{paymentBank,jdbcType=VARCHAR}, #{bankFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.lhx.bean.UserPay">
    insert into t_mall_user_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paymentBank != null">
        payment_bank,
      </if>
      <if test="bankFlow != null">
        bank_flow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentBank != null">
        #{paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="bankFlow != null">
        #{bankFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lhx.bean.UserPayExample" resultType="java.lang.Long">
    select count(*) from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_mall_user_pay
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentBank != null">
        payment_bank = #{record.paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankFlow != null">
        bank_flow = #{record.bankFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_mall_user_pay
    set Id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      payment_bank = #{record.paymentBank,jdbcType=VARCHAR},
      bank_flow = #{record.bankFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lhx.bean.UserPay">
    update t_mall_user_pay
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentBank != null">
        payment_bank = #{paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="bankFlow != null">
        bank_flow = #{bankFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lhx.bean.UserPay">
    update t_mall_user_pay
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DOUBLE},
      payment_method = #{paymentMethod,jdbcType=VARCHAR},
      payment_bank = #{paymentBank,jdbcType=VARCHAR},
      bank_flow = #{bankFlow,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.lhx.bean.UserPay">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="order_amount" jdbcType="DOUBLE" property="orderAmount" />
    <result column="payment_method" jdbcType="VARCHAR" property="paymentMethod" />
    <result column="payment_bank" jdbcType="VARCHAR" property="paymentBank" />
    <result column="bank_flow" jdbcType="VARCHAR" property="bankFlow" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, user_id, order_id, payment_time, order_amount, payment_method, payment_bank, 
    bank_flow
  </sql>
  <select id="selectByExample" parameterType="org.lhx.bean.UserPayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_mall_user_pay
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_mall_user_pay
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.lhx.bean.UserPayExample">
    delete from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.lhx.bean.UserPay">
    insert into t_mall_user_pay (Id, user_id, order_id, 
      payment_time, order_amount, payment_method, 
      payment_bank, bank_flow)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{orderAmount,jdbcType=DOUBLE}, #{paymentMethod,jdbcType=VARCHAR}, 
      #{paymentBank,jdbcType=VARCHAR}, #{bankFlow,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.lhx.bean.UserPay">
    insert into t_mall_user_pay
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="orderAmount != null">
        order_amount,
      </if>
      <if test="paymentMethod != null">
        payment_method,
      </if>
      <if test="paymentBank != null">
        payment_bank,
      </if>
      <if test="bankFlow != null">
        bank_flow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentMethod != null">
        #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentBank != null">
        #{paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="bankFlow != null">
        #{bankFlow,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lhx.bean.UserPayExample" resultType="java.lang.Long">
    select count(*) from t_mall_user_pay
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_mall_user_pay
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderAmount != null">
        order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.paymentMethod != null">
        payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.paymentBank != null">
        payment_bank = #{record.paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankFlow != null">
        bank_flow = #{record.bankFlow,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_mall_user_pay
    set Id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      order_amount = #{record.orderAmount,jdbcType=DOUBLE},
      payment_method = #{record.paymentMethod,jdbcType=VARCHAR},
      payment_bank = #{record.paymentBank,jdbcType=VARCHAR},
      bank_flow = #{record.bankFlow,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lhx.bean.UserPay">
    update t_mall_user_pay
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderAmount != null">
        order_amount = #{orderAmount,jdbcType=DOUBLE},
      </if>
      <if test="paymentMethod != null">
        payment_method = #{paymentMethod,jdbcType=VARCHAR},
      </if>
      <if test="paymentBank != null">
        payment_bank = #{paymentBank,jdbcType=VARCHAR},
      </if>
      <if test="bankFlow != null">
        bank_flow = #{bankFlow,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lhx.bean.UserPay">
    update t_mall_user_pay
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      order_amount = #{orderAmount,jdbcType=DOUBLE},
      payment_method = #{paymentMethod,jdbcType=VARCHAR},
      payment_bank = #{paymentBank,jdbcType=VARCHAR},
      bank_flow = #{bankFlow,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>